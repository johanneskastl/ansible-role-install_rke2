---
# install_rke2/tasks/binary.yml

#
# Download and install the binary
#

# This is the original command used by the install script:
# curl -w "%{url_effective}" -L -s -S "${version_url}" -o /dev/null | sed -e 's|.*/||'
#
# with version_url being defined as "${INSTALL_RKE2_CHANNEL_URL}/${INSTALL_RKE2_CHANNEL}"

- name: 'Detect latest kubernetes version, unless specified by the user'
  ansible.builtin.uri:
    url: "{{ rke2_installation_url }}/{{ rke2_installation_channel }}"
  delegate_to: 'localhost'
  become: false
  changed_when: false
  check_mode: false
  register: get_rke2_version
  when:
    - 'rke2_version is undefined'

- name: 'Store rke2 version in variable'
  ansible.builtin.set_fact:
    rke2_version: "{{ get_rke2_version.url | basename }}"
  when:
    - 'rke2_version is undefined'

- name: 'Download rke2 binary'
  ansible.builtin.get_url:
    url: "https://github.com/rancher/rke2/releases/download/{{ rke2_version }}/{{ rke2_binary_download_name }}"
    dest: "{{ path_to_install_to }}/bin/rke2"
    checksum: "sha256:https://github.com/rancher/rke2/releases/download/{{ rke2_version }}/{{ rke2_sha256sum_download_name }}"
    owner: 'root'
    group: 'root'
    mode: '0755'
  register: download_binary
  notify:
    - 'Restart the rke2 service'

- name: 'Set fact to ignore errors in check mode, if binary would be downloaded'
  ansible.builtin.set_fact:
    ignore_errors_when_binary_downloaded: true
  when:
    - 'download_binary.changed | bool'
    - 'ansible_check_mode | bool'
